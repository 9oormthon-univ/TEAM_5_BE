# release 브랜치에서 main 브랜치로 Merge 이벤트가 발생하면 트리거
# GitHub Actions 에서는 아직까지 Merged 이벤트를 공식적으로 지원하고 있지 않기 때문에 자체적으로 Merged 를 감지
# main 브랜치의 PR 이 Closed 이고, merged 가 true 일 때를 트리거 조건으로 지정

name: 🚀 Deploy workflow on production environment

on:
  pull_request:
    branches: [main]
      types: [closed]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: ✅ Checkout branch
        uses: actions/checkout@v3

      - name: 📀 Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: 🔨 Build Project
        run: ./gradlew clean build
  deploy:
    needs: build
    env:
      ENV_PATH: .env
      DEPLOYMENT_GROUP_NAME: production
      S3_BUCKET_DIR_NAME: production
    environment: production
    runs-on: ubuntu-22.04
    steps:
      - name: ✅ Checkout branch
        uses: actions/checkout@v3

      - name: 🗂️ Make config folder
        run: mkdir -p config

      - name: ⚙️Create .env file
        run: |
          touch ${{ env.ENV_PATH }}
            echo DOMAIN_FIR=${{ secrets.DOMAIN_FIR }} >> ${{ env.ENV_PATH }}
#            echo SOCKET_PORT_PROD=${{ secrets.SOCKET_PORT_PROD }} >> ${{ env.ENV_PATH }}
#            echo SOCKET_PORT_TEST=${{ secrets.SOCKET_PORT_TEST }} >> ${{ env.ENV_PATH }}

      - name: 📦 Zip project files
        run: zip -r ./$GITHUB_SHA.zip .

      - name: 🌎 Access to AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: 🚛 Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://${{ secrets.S3_BUCKET_NAME }}/${{ env.S3_BUCKET_DIR_NAME }}/$GITHUB_SHA.zip

      - name: 🚀 Deploy to EC2 with CodeDeploy
        run: aws deploy create-deployment
          --application-name codedeploy-app
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name ${{ env.DEPLOYMENT_GROUP_NAME }}
          --s3-location bucket=${{ secrets.S3_BUCKET_NAME }},bundleType=zip,key=${{ env.S3_BUCKET_DIR_NAME }}/$GITHUB_SHA.zip
